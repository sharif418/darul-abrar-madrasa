<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class Exam extends Model
{
    use HasFactory;

    /**
     * The attributes that are mass assignable.
     *
     * @var array<int, string>
     */
    protected $fillable = [
        'name',
        'class_id',
        'start_date',
        'end_date',
        'description',
        'is_active',
        'is_result_published',
    ];

    /**
     * The attributes that should be cast.
     *
     * @var array<string, string>
     */
    protected $casts = [
        'start_date' => 'date',
        'end_date' => 'date',
        'is_active' => 'boolean',
        'is_result_published' => 'boolean',
    ];

    /**
     * Get the class that owns the exam.
     */
    public function class()
    {
        return $this->belongsTo(ClassRoom::class, 'class_id');
    }

    /**
     * Get the results for the exam.
     */
    public function results()
    {
        return $this->hasMany(Result::class);
    }

    /**
     * Check if the exam is ongoing.
     */
    public function getIsOngoingAttribute()
    {
        $now = now();
        return $this->start_date->lte($now) && $this->end_date->gte($now);
    }

    /**
     * Check if the exam is upcoming.
     */
    public function getIsUpcomingAttribute()
    {
        return $this->start_date->gt(now());
    }

    /**
     * Check if the exam is completed.
     */
    public function getIsCompletedAttribute()
    {
        return $this->end_date->lt(now());
    }

    /**
     * Get the duration of the exam in days.
     */
    public function getDurationAttribute()
    {
        return $this->start_date->diffInDays($this->end_date) + 1;
    }

    /**
     * Scope a query to only include active exams.
     */
    public function scopeActive($query)
    {
        return $query->where('is_active', true);
    }

    /**
     * Scope a query to only include exams with published results.
     */
    public function scopePublishedResults($query)
    {
        return $query->where('is_result_published', true);
    }

    /**
     * Scope a query to only include ongoing exams.
     */
    public function scopeOngoing($query)
    {
        $now = now();
        return $query->where('start_date', '<=', $now)
            ->where('end_date', '>=', $now);
    }

    /**
     * Scope a query to only include upcoming exams.
     */
    public function scopeUpcoming($query)
    {
        return $query->where('start_date', '>', now());
    }

    /**
     * Scope a query to only include completed exams.
     */
    public function scopeCompleted($query)
    {
        return $query->where('end_date', '<', now());
    }
}